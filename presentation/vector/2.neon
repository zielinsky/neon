data Nat =
| Zero
| Succ (k : Nat)

data VecInt (n : Nat) =
| VNil
    (p : n == Zero)
| VCons
    (m  : Nat)                     
    (p  : n == Succ(m))    
    (hd : Int)
    (tl : VecInt(m))

let vnil =
  VNil( Zero
      , refl Zero)
      
let cons (hd : Int) (m : Nat) (tl : VecInt(m)) =
  let n = Succ(m) in
  VCons( n         
       , m                
       , refl n
       , hd
       , tl)
